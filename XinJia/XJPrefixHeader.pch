//
//  XJPrefixHeader.pch
//  XinJia
//
//  Created by 李瑞 on 2017/5/28.
//  Copyright © 2017年 RayKi. All rights reserved.
//

#ifndef XJPrefixHeader_pch
#define XJPrefixHeader_pch

#import "LRMediator.h"
#import "Masonry.h"
//#import "YYModel.h"
#import "SVProgressHUD.h"
#import "YYKit.h"
#import "XJHelper.h"

#import "UIScrollView+EmptyDataSet.h"
#import "BaseWebViewController.h"


#define kScreen_height [[UIScreen mainScreen] bounds].size.height //主屏幕的高度
#define kScreen_width  [[UIScreen mainScreen] bounds].size.width  //主屏幕的宽度
#define WidthScale(w) (w)/375.00*kScreen_width
#define HeightScale(h) (h)/667.00*kScreen_height

#define RGBACOLOR(r,g,b,a)       [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:(a)]

#define ViewGrayColor [UIColor colorWithRed:(240)/255.0f green:(240)/255.0f blue:(240)/255.0f alpha:(1)]
#define BlackColor  UIColorHex(#180818) //
#define navFontName @"FZLBJW--GB1-0" //nav主题字体名称  隶变

//相册多选引入
//相册多选引入宏
#import <AssetsLibrary/AssetsLibrary.h>
#import "LSYConfig.h"
#import "LSYAlbum.h"
#define ScreenSize [UIScreen mainScreen].bounds.size
#define kThumbnailLength    ([UIScreen mainScreen].bounds.size.width - 5*5)/4
#define kThumbnailSize      CGSizeMake(kThumbnailLength, kThumbnailLength)
#define DistanceFromTopGuiden(view) (view.frame.origin.y + view.frame.size.height)
#define DistanceFromLeftGuiden(view) (view.frame.origin.x + view.frame.size.width)
#define ViewOrigin(view)   (view.frame.origin)
#define ViewSize(view)  (view.frame.size)

#define isIPhoneX           ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125,2436), [[UIScreen mainScreen] currentMode].size) : NO)
//判断iPHoneXr
#define IS_IPHONE_Xr ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828,1792), [[UIScreen mainScreen] currentMode].size) : NO)
//判断iPhoneXs Max
#define IS_IPHONE_Xs_Max ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242,2688), [[UIScreen mainScreen] currentMode].size) : NO)

//判断是否是iPhoneX系列
#define IS_IPHONE_X_SERIES isIPhoneX || IS_IPHONE_Xr || IS_IPHONE_Xs_Max

#define UXY_NAV_HEIGHT  (IS_IPHONE_X_SERIES ? 88.0 : 64.0)
#define UXY_TAB_HEIGHT  (IS_IPHONE_X_SERIES ? 83.0 : 49.0)



#ifndef weakify
#if DEBUG
#if __has_feature(objc_arc)
#define weakify(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
#endif
#else
#if __has_feature(objc_arc)
#define weakify(object) try{} @finally{} {} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) try{} @finally{} {} __block __typeof__(object) block##_##object = object;
#endif
#endif
#endif

#ifndef strongify
#if DEBUG
#if __has_feature(objc_arc)
#define strongify(object) autoreleasepool{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) autoreleasepool{} __typeof__(object) object = block##_##object;
#endif
#else
#if __has_feature(objc_arc)
#define strongify(object) try{} @finally{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) try{} @finally{} __typeof__(object) object = block##_##object;
#endif
#endif
#endif


#define SYSTEM_VERSION_EQUAL_TO(v)                                             \
([[[UIDevice currentDevice] systemVersion] compare:v                         \
options:NSNumericSearch] ==       \
NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)                                         \
([[[UIDevice currentDevice] systemVersion] compare:v                         \
options:NSNumericSearch] ==       \
NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)                             \
([[[UIDevice currentDevice] systemVersion] compare:v                         \
options:NSNumericSearch] !=       \
NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                                            \
([[[UIDevice currentDevice] systemVersion] compare:v                         \
options:NSNumericSearch] ==       \
NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)                                \
([[[UIDevice currentDevice] systemVersion] compare:v                         \
options:NSNumericSearch] !=       \
NSOrderedDescending)

#endif /* XJPrefixHeader_pch */
